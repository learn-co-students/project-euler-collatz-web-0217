{"examples":[{"description":"returns the correct value, given an even input","full_description":"#even_next(n) returns the correct value, given an even input","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":4,"run_time":0.002432},{"description":"returns the correct value, given an odd input","full_description":"#odd_next(n) returns the correct value, given an odd input","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":12,"run_time":0.000135},{"description":"returns the correct value, given an even input","full_description":"#next_value(n) returns the correct value, given an even input","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":20,"run_time":0.000109},{"description":"returns the correct value, given an odd input","full_description":"#next_value(n) returns the correct value, given an odd input","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":25,"run_time":0.000191},{"description":"returns the correct Collatz sequence, from n to 1","full_description":"#collatz(n) returns the correct Collatz sequence, from n to 1","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":33,"run_time":0.000112},{"description":"returns the starting number under one million that produces the longest sequence","full_description":"#longest_collatz returns the starting number under one million that produces the longest sequence","status":"passed","file_path":"./spec/project_euler_collatz_spec.rb","line_number":40,"run_time":72.457671}],"summary":{"duration":72.466283,"example_count":6,"failure_count":0,"pending_count":0},"summary_line":"6 examples, 0 failures"}